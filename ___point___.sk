on load:
    createUData("point")

on first join:
    set {xmas::user::point::%uuid of player%} to 0

#> 플레이어가 현재 가지고 있는 포인트를 반환합니다.
#> @param player 현재 가지고 있는 포인트를 확인할 플레이어
#> @return 현재 플레이어가 가지고 있는 포인트
function getPoint(player: offlineplayer) :: number:
    set {_uuid} to uuid of {_player}
    return {xmas::user::point::%{_uuid}%}

#> 플레이어의 포인트를 설정합니다.
#> @param player 포인트를 설정할 플레이어
#> @param point 설정할 값
function setPoint(player: offlineplayer, point: number):
    set {_uuid} to uuid of {_player}
    set {xmas::user::point::%{_uuid}%} to {_point}

#> 플레이어에게 포인트를 추가합니다.
#> @param player 
#> @param point 
function addPoint(player: offlineplayer, point: number):
    set {_uuid} to uuid of {_player}
    add {_point} to {xmas::user::point::%{_uuid}%}

#> 플레이어의 포인트를 감소시킵니다.
#> @param player 
#> @param point 
#> @return 
function subPoint(player: offlineplayer, point: number) :: boolean:
    set {_uuid} to uuid of {_player}
    if {xmas::user::point::%{_uuid}%} >= {_point}:
        subtract {_point} from {xmas::user::point::%{_uuid}%}
        return true
    return false

#> 플레이어의 포인트를 다른 플레이어에게 줍니다.
#> @param giver 포인트를 줄 플레이어
#> @param receiver 포인트를 받을 플레이어
#> @param point 주고 받을 포인트
#> @return 성공 여부
function givePoint(giver: offlineplayer, receiver: offlineplayer, point: number) :: boolean:
    if subPoint({_giver}, {_point}):
        addPoint({_receiver}, {_point})
        return true
    return false

#> 플레이어의 포인트 정보를 서버 내에서 제거합니다.
#> @param player 
function deletePoint(player: offlineplayer):
    set {_uuid} to uuid of {_player}
    delete {xmas::user::point::%{_uuid}%}